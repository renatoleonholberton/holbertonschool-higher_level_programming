The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file. First import
``add_integer`` from the ``0-add_integer`` module:

	>>> MyList = __import__('1-my_list').MyList

Now use it:

	>>> my_list = MyList()

	>>> print(my_list)
	[]

	>>> my_list.print_sorted()
	[]

	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	
	>>> print(my_list)
	[1, 4, 2, 3, 5]

	>>> my_list.print_sorted()
	[1, 2, 3, 4, 5]

	>>> print(my_list)
	[1, 4, 2, 3, 5]

	>>> print(my_list[1])
	4

	>>> print(my_list[5])
	Traceback (most recent call last):
		...
	IndexError: list index out of range

	>>> print(MyList(129))
	Traceback (most recent call last):
		...
	TypeError: 'int' object is not iterable

	>>> print(MyList([1,2,3]))
	[1, 2, 3]

	>>> my_list = MyList(['2', '1','3'])
	>>> print(my_list)
	['2', '1', '3']

	>>> my_list.print_sorted()
	['1', '2', '3']

	>>> my_list.print_sorted(12)
	Traceback (most recent call last):
		...
	TypeError: print_sorted() takes 1 positional argument but 2 were given

	>>> my_list = MyList([1, 4, 34, 3, 5])
	>>> my_list.remove(34)
	>>> print(my_list)
	[1, 4, 3, 5]

	>>> my_list[2] = 2
	>>> print(my_list)
	[1, 4, 2, 5]

	>>> my_list = MyList([1, 'hello', 3, True])
	>>> print(my_list)
	[1, 'hello', 3, True]

	>>> my_list.print_sorted()
	Traceback (most recent call last):
		...	
	TypeError: unorderable types: str() < int()

	>>> my_list = MyList(None)
	Traceback (most recent call last):
		...	
	TypeError: 'NoneType' object is not iterable

	>>> my_list = MyList([1, 2, 3], [1, 2, 3])
	Traceback (most recent call last):
		...	
	TypeError: list() takes at most 1 argument (2 given)
